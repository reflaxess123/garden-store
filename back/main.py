import app.env_setup
from fastapi import FastAPI
import os
import psycopg2
import redis
from dotenv import load_dotenv
from fastapi.middleware.cors import CORSMiddleware # Import CORS middleware
from decimal import Decimal
import json
from contextlib import asynccontextmanager

class CustomJsonEncoder(json.JSONEncoder):
    def default(self, obj):
        if isinstance(obj, Decimal):
            return float(obj)
        return json.JSONEncoder.default(self, obj)

# –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–¥–∏—Ä–æ–≤—â–∏–∫ –¥–ª—è json
json._default_encoder = CustomJsonEncoder()

# –ò–º–ø–æ—Ä—Ç —Ä–æ—É—Ç–µ—Ä–æ–≤
from app.routers import auth, admin, cart, categories, products, orders, favorites
from app.db.database import check_database_connection

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env –µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
env_file = os.path.join(os.path.dirname(__file__), '.env')
if os.path.exists(env_file):
    load_dotenv(env_file)
    print("–ó–∞–≥—Ä—É–∂–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞")
else:
    print("–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Å–∏—Å—Ç–µ–º—ã")

print("DATABASE_URL:", "***" if os.getenv("DATABASE_URL") else "–ù–ï –ó–ê–î–ê–ù")
print("REDIS_URL:", "***" if os.getenv("REDIS_URL") else "–ù–ï –ó–ê–î–ê–ù")

@asynccontextmanager
async def lifespan(app: FastAPI):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    print("üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    db_connected = await check_database_connection()
    if not db_connected:
        print("‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ")
    yield
    # Cleanup –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    print("üîÑ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")

app = FastAPI(lifespan=lifespan)

# CORS configuration
origins = [
    "http://localhost:3000",  # Next.js frontend –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    "http://127.0.0.1:3000",
    "http://frontend:3000",   # Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
]

# –î–æ–±–∞–≤–ª—è–µ–º –≤–Ω–µ—à–Ω–∏–µ –¥–æ–º–µ–Ω—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
external_origins = os.getenv("EXTERNAL_ORIGINS", "").split(",")
for origin in external_origins:
    if origin.strip():
        origins.append(origin.strip())

print("–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ CORS origins:", origins)

app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Include routers
app.include_router(auth.router, prefix="/api")
app.include_router(admin.router, prefix="/api")
app.include_router(cart.router, prefix="/api")
app.include_router(categories.router, prefix="/api")
app.include_router(products.router, prefix="/api")
app.include_router(orders.router, prefix="/api")
app.include_router(favorites.router, prefix="/api")

@app.get("/health")
async def health_check():
    db_status = "unknown"
    redis_status = "unknown"

    # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
    try:
        db_connected = await check_database_connection()
        db_status = "OK" if db_connected else "Connection failed"
    except Exception as e:
        db_status = f"Error: {e}"

    # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º REDIS_URL –Ω–∞–ø—Ä—è–º—É—é
        redis_url = os.getenv("REDIS_URL")
        r = redis.from_url(redis_url)
        r.ping()
        print("Redis: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        redis_status = "OK"
    except Exception as e:
        redis_status = f"Error: {e}"

    return {"database": db_status, "redis": redis_status}

if __name__ == "__main__":
    import uvicorn
    uvicorn.run("main:app", host="localhost", port=4000, reload=True)

# –£–¥–∞–ª–µ–Ω –±–ª–æ–∫ if __name__ == "__main__":
# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å —Å–µ—Ä–≤–µ—Ä FastAPI –≤—Ä—É—á–Ω—É—é. 