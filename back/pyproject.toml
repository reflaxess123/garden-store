[tool.poetry]
name = "back"
version = "0.1.0"
description = ""
authors = ["reflaxess123 <reflaxess@yandex.ru>"]
packages = []
package-mode = false

[tool.poetry.dependencies]
python = ">=3.9"
fastapi = "^0.115.0"
uvicorn = "^0.31.0"
python-dotenv = "^1.0.0"
psycopg2-binary = "^2.9.0"
asyncpg = "^0.30.0"
redis = "^5.1.0"
sqlalchemy = "^2.0.0"
pydantic = "^2.10.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.20"
alembic = "^1.14.0"
bcrypt = "4.0.1"
websockets = "^13.0"

[tool.black]
line-length = 120
target-version = ['py310']

[tool.ruff]
line-length = 120
exclude = [
    ".git",
    "__pycache__",
    "venv",
    "env",
    ".ruff_cache",
    "migrations", # Alembic migrations
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
    "A",  # flake8-builtins
    "B",  # flake8-bugbear
    "ERA",# eradicate
    "N",  # pep8-naming
    "ANN",# flake8-annotations
    "ASYNC", # flake8-async
    "PLE", # pylint
]
ignore = [
    "E501", # Line too long (handled by Black)
    "ANN101", # Missing type annotation for self in method
    "ANN102", # Missing type annotation for cls in classmethod
    "ANN002", # Missing type annotation for args
    "ANN003", # Missing type annotation for kwargs
    "B008", # Do not perform function call in argument defaults (FastAPI Depends pattern)
    "N815", # Mixed case variable in class scope (Pydantic fields with aliases)
]

[tool.poetry.group.dev.dependencies]
pytest = "^8.0"
httpx = "^0.27.0"
pytest-asyncio = "^1.0.0"
mypy = "^1.8.0"
types-redis = "^4.6.0"
types-passlib = "^1.7.7"
ruff = "^0.12.0"
black = "^25.1.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = [ "." ]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = [
    "alembic.*",
    "redis.*",
    "passlib.*",
    "jose.*",
]
ignore_missing_imports = true
