services:
  # Бэкенд сервис
  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    container_name: garden-store-backend
    restart: unless-stopped
    environment:
      # База данных
      - DATABASE_URL=${DATABASE_URL}
      # Redis
      - REDIS_URL=${REDIS_URL}
      # JWT и сессии
      - SECRET_KEY=${SECRET_KEY}
      # Сервер
      - PORT=4000
      - HOST=0.0.0.0
      - DEBUG=${DEBUG:-false}
      # CORS origins для продакшена
      - EXTERNAL_ORIGINS=http://185.21.13.91:3003,https://185.21.13.91:3003
    ports:
      - "4001:4000"
    volumes:
      # Используем ../files для персистентности данных как рекомендует Dokploy
      - "../files/backend-logs:/app/logs"
      - "../files/backend-uploads:/app/uploads"
    networks:
      - garden-store-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Фронтенд сервисsasdasd
  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
        - BACKEND_URL=${BACKEND_URL}
    container_name: garden-store-frontend
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=http://185.21.13.91:4001
      - BACKEND_URL=http://185.21.13.91:4001
    ports:
      - "3003:3000"
    depends_on:
      - backend
    networks:
      - garden-store-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  garden-store-network:
    driver: bridge

volumes:
  # Используем именованные volumes для данных
  backend-logs:
    driver: local
  backend-uploads:
    driver: local
